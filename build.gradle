plugins {
    id 'java'
    id 'application'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

group 'com.evolven'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'info.picocli:picocli:4.7.0'
    implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'
    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'
    // https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.14.0'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-dataformat-yaml
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.8.6'
    implementation 'org.apache.logging.log4j:log4j-api:2.19.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.19.0'

    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.14.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

jar {
    manifest {
        attributes(
                'Class-Path': configurations.compileClasspath.collect { it.getName() }.join(' '),
                'Main-Class': 'com.evolven.Main'
        )
    }
}

task copyAllDependencies(type: Copy) {
    from configurations.runtimeClasspath
    from jar
    into "${buildDir}/output/lib/"
}
build.dependsOn(copyAllDependencies)

task copyLaunchers(type: Copy) {
    from "${rootDir}/evolven.bat"
    from "${rootDir}/evolven.ps1"
    from "${rootDir}/evolven.sh"
    into "${buildDir}/output/bin/"
}
build.dependsOn(copyLaunchers)

task copyInstallers(type: Copy) {
    from "${rootDir}/InstallWindows.ps1"
    into "${buildDir}/output/"
}
build.dependsOn(copyInstallers)

test {
    useJUnitPlatform()
}